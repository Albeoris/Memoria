
// SoLoud wrapper for C# (cs)
// This file is autogenerated; any changes will be overwritten

using System;
using System.Runtime.InteropServices;

namespace SoLoud
{

    public class SoloudObject
    {
        public IntPtr objhandle;
    }

    public class Soloud : SoloudObject
    {
        public const int AUTO = 0;
        public const int SDL1 = 1;
        public const int SDL2 = 2;
        public const int PORTAUDIO = 3;
        public const int WINMM = 4;
        public const int XAUDIO2 = 5;
        public const int WASAPI = 6;
        public const int ALSA = 7;
        public const int JACK = 8;
        public const int OSS = 9;
        public const int OPENAL = 10;
        public const int COREAUDIO = 11;
        public const int OPENSLES = 12;
        public const int VITA_HOMEBREW = 13;
        public const int MINIAUDIO = 14;
        public const int NOSOUND = 15;
        public const int NULLDRIVER = 16;
        public const int BACKEND_MAX = 17;
        public const int CLIP_ROUNDOFF = 1;
        public const int ENABLE_VISUALIZATION = 2;
        public const int LEFT_HANDED_3D = 4;
        public const int NO_FPU_REGISTER_CHANGE = 8;

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_create")]
        internal static extern IntPtr Soloud_create();
        public Soloud()
        {
            objhandle = Soloud_create();
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_destroy")]
        internal static extern IntPtr Soloud_destroy(IntPtr aObjHandle);
        ~Soloud()
        {
            Soloud_destroy(objhandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_initEx")]
        internal static extern int Soloud_initEx(IntPtr aObjHandle, uint aFlags, uint aBackend, uint aSamplerate, uint aBufferSize, uint aChannels);
        public int init(uint aFlags = CLIP_ROUNDOFF, uint aBackend = AUTO, uint aSamplerate = AUTO, uint aBufferSize = AUTO, uint aChannels = 2)
        {
            return Soloud_initEx(objhandle, aFlags, aBackend, aSamplerate, aBufferSize, aChannels);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_deinit")]
        internal static extern void Soloud_deinit(IntPtr aObjHandle);
        public void deinit()
        {
            Soloud_deinit(objhandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getVersion")]
        internal static extern uint Soloud_getVersion(IntPtr aObjHandle);
        public uint getVersion()
        {
            return Soloud_getVersion(objhandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getErrorString")]
        internal static extern IntPtr Soloud_getErrorString(IntPtr aObjHandle, int aErrorCode);
        public string getErrorString(int aErrorCode)
        {
            IntPtr p = Soloud_getErrorString(objhandle, aErrorCode);
            return Marshal.PtrToStringAnsi(p);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getBackendId")]
        internal static extern uint Soloud_getBackendId(IntPtr aObjHandle);
        public uint getBackendId()
        {
            return Soloud_getBackendId(objhandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getBackendString")]
        internal static extern IntPtr Soloud_getBackendString(IntPtr aObjHandle);
        public string getBackendString()
        {
            IntPtr p = Soloud_getBackendString(objhandle);
            return Marshal.PtrToStringAnsi(p);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getBackendChannels")]
        internal static extern uint Soloud_getBackendChannels(IntPtr aObjHandle);
        public uint getBackendChannels()
        {
            return Soloud_getBackendChannels(objhandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getBackendSamplerate")]
        internal static extern uint Soloud_getBackendSamplerate(IntPtr aObjHandle);
        public uint getBackendSamplerate()
        {
            return Soloud_getBackendSamplerate(objhandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getBackendBufferSize")]
        internal static extern uint Soloud_getBackendBufferSize(IntPtr aObjHandle);
        public uint getBackendBufferSize()
        {
            return Soloud_getBackendBufferSize(objhandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_setSpeakerPosition")]
        internal static extern int Soloud_setSpeakerPosition(IntPtr aObjHandle, uint aChannel, float aX, float aY, float aZ);
        public int setSpeakerPosition(uint aChannel, float aX, float aY, float aZ)
        {
            return Soloud_setSpeakerPosition(objhandle, aChannel, aX, aY, aZ);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getSpeakerPosition")]
        internal static extern int Soloud_getSpeakerPosition(IntPtr aObjHandle, uint aChannel, float[] aX, float[] aY, float[] aZ);
        public int getSpeakerPosition(uint aChannel, float[] aX, float[] aY, float[] aZ)
        {
            return Soloud_getSpeakerPosition(objhandle, aChannel, aX, aY, aZ);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_playEx")]
        internal static extern uint Soloud_playEx(IntPtr aObjHandle, IntPtr aSound, float aVolume, float aPan, int aPaused, uint aBus);
        public uint play(SoloudObject aSound, float aVolume = -1.0f, float aPan = 0.0f, int aPaused = 0, uint aBus = 0)
        {
            return Soloud_playEx(objhandle, aSound.objhandle, aVolume, aPan, aPaused, aBus);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_playClockedEx")]
        internal static extern uint Soloud_playClockedEx(IntPtr aObjHandle, double aSoundTime, IntPtr aSound, float aVolume, float aPan, uint aBus);
        public uint playClocked(double aSoundTime, SoloudObject aSound, float aVolume = -1.0f, float aPan = 0.0f, uint aBus = 0)
        {
            return Soloud_playClockedEx(objhandle, aSoundTime, aSound.objhandle, aVolume, aPan, aBus);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_play3dEx")]
        internal static extern uint Soloud_play3dEx(IntPtr aObjHandle, IntPtr aSound, float aPosX, float aPosY, float aPosZ, float aVelX, float aVelY, float aVelZ, float aVolume, int aPaused, uint aBus);
        public uint play3d(SoloudObject aSound, float aPosX, float aPosY, float aPosZ, float aVelX = 0.0f, float aVelY = 0.0f, float aVelZ = 0.0f, float aVolume = 1.0f, int aPaused = 0, uint aBus = 0)
        {
            return Soloud_play3dEx(objhandle, aSound.objhandle, aPosX, aPosY, aPosZ, aVelX, aVelY, aVelZ, aVolume, aPaused, aBus);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_play3dClockedEx")]
        internal static extern uint Soloud_play3dClockedEx(IntPtr aObjHandle, double aSoundTime, IntPtr aSound, float aPosX, float aPosY, float aPosZ, float aVelX, float aVelY, float aVelZ, float aVolume, uint aBus);
        public uint play3dClocked(double aSoundTime, SoloudObject aSound, float aPosX, float aPosY, float aPosZ, float aVelX = 0.0f, float aVelY = 0.0f, float aVelZ = 0.0f, float aVolume = 1.0f, uint aBus = 0)
        {
            return Soloud_play3dClockedEx(objhandle, aSoundTime, aSound.objhandle, aPosX, aPosY, aPosZ, aVelX, aVelY, aVelZ, aVolume, aBus);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_playBackgroundEx")]
        internal static extern uint Soloud_playBackgroundEx(IntPtr aObjHandle, IntPtr aSound, float aVolume, int aPaused, uint aBus);
        public uint playBackground(SoloudObject aSound, float aVolume = -1.0f, int aPaused = 0, uint aBus = 0)
        {
            return Soloud_playBackgroundEx(objhandle, aSound.objhandle, aVolume, aPaused, aBus);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_seek")]
        internal static extern int Soloud_seek(IntPtr aObjHandle, uint aVoiceHandle, double aSeconds);
        public int seek(uint aVoiceHandle, double aSeconds)
        {
            return Soloud_seek(objhandle, aVoiceHandle, aSeconds);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_stop")]
        internal static extern void Soloud_stop(IntPtr aObjHandle, uint aVoiceHandle);
        public void stop(uint aVoiceHandle)
        {
            Soloud_stop(objhandle, aVoiceHandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_stopAll")]
        internal static extern void Soloud_stopAll(IntPtr aObjHandle);
        public void stopAll()
        {
            Soloud_stopAll(objhandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_stopAudioSource")]
        internal static extern void Soloud_stopAudioSource(IntPtr aObjHandle, IntPtr aSound);
        public void stopAudioSource(SoloudObject aSound)
        {
            Soloud_stopAudioSource(objhandle, aSound.objhandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_countAudioSource")]
        internal static extern int Soloud_countAudioSource(IntPtr aObjHandle, IntPtr aSound);
        public int countAudioSource(SoloudObject aSound)
        {
            return Soloud_countAudioSource(objhandle, aSound.objhandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_setFilterParameter")]
        internal static extern void Soloud_setFilterParameter(IntPtr aObjHandle, uint aVoiceHandle, uint aFilterId, uint aAttributeId, float aValue);
        public void setFilterParameter(uint aVoiceHandle, uint aFilterId, uint aAttributeId, float aValue)
        {
            Soloud_setFilterParameter(objhandle, aVoiceHandle, aFilterId, aAttributeId, aValue);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getFilterParameter")]
        internal static extern float Soloud_getFilterParameter(IntPtr aObjHandle, uint aVoiceHandle, uint aFilterId, uint aAttributeId);
        public float getFilterParameter(uint aVoiceHandle, uint aFilterId, uint aAttributeId)
        {
            return Soloud_getFilterParameter(objhandle, aVoiceHandle, aFilterId, aAttributeId);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_fadeFilterParameter")]
        internal static extern void Soloud_fadeFilterParameter(IntPtr aObjHandle, uint aVoiceHandle, uint aFilterId, uint aAttributeId, float aTo, double aTime);
        public void fadeFilterParameter(uint aVoiceHandle, uint aFilterId, uint aAttributeId, float aTo, double aTime)
        {
            Soloud_fadeFilterParameter(objhandle, aVoiceHandle, aFilterId, aAttributeId, aTo, aTime);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_oscillateFilterParameter")]
        internal static extern void Soloud_oscillateFilterParameter(IntPtr aObjHandle, uint aVoiceHandle, uint aFilterId, uint aAttributeId, float aFrom, float aTo, double aTime);
        public void oscillateFilterParameter(uint aVoiceHandle, uint aFilterId, uint aAttributeId, float aFrom, float aTo, double aTime)
        {
            Soloud_oscillateFilterParameter(objhandle, aVoiceHandle, aFilterId, aAttributeId, aFrom, aTo, aTime);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getStreamTime")]
        internal static extern double Soloud_getStreamTime(IntPtr aObjHandle, uint aVoiceHandle);
        public double getStreamTime(uint aVoiceHandle)
        {
            return Soloud_getStreamTime(objhandle, aVoiceHandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getStreamPosition")]
        internal static extern double Soloud_getStreamPosition(IntPtr aObjHandle, uint aVoiceHandle);
        public double getStreamPosition(uint aVoiceHandle)
        {
            return Soloud_getStreamPosition(objhandle, aVoiceHandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getPause")]
        internal static extern int Soloud_getPause(IntPtr aObjHandle, uint aVoiceHandle);
        public int getPause(uint aVoiceHandle)
        {
            return Soloud_getPause(objhandle, aVoiceHandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getVolume")]
        internal static extern float Soloud_getVolume(IntPtr aObjHandle, uint aVoiceHandle);
        public float getVolume(uint aVoiceHandle)
        {
            return Soloud_getVolume(objhandle, aVoiceHandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getOverallVolume")]
        internal static extern float Soloud_getOverallVolume(IntPtr aObjHandle, uint aVoiceHandle);
        public float getOverallVolume(uint aVoiceHandle)
        {
            return Soloud_getOverallVolume(objhandle, aVoiceHandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getPan")]
        internal static extern float Soloud_getPan(IntPtr aObjHandle, uint aVoiceHandle);
        public float getPan(uint aVoiceHandle)
        {
            return Soloud_getPan(objhandle, aVoiceHandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getSamplerate")]
        internal static extern float Soloud_getSamplerate(IntPtr aObjHandle, uint aVoiceHandle);
        public float getSamplerate(uint aVoiceHandle)
        {
            return Soloud_getSamplerate(objhandle, aVoiceHandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getProtectVoice")]
        internal static extern int Soloud_getProtectVoice(IntPtr aObjHandle, uint aVoiceHandle);
        public int getProtectVoice(uint aVoiceHandle)
        {
            return Soloud_getProtectVoice(objhandle, aVoiceHandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getActiveVoiceCount")]
        internal static extern uint Soloud_getActiveVoiceCount(IntPtr aObjHandle);
        public uint getActiveVoiceCount()
        {
            return Soloud_getActiveVoiceCount(objhandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getVoiceCount")]
        internal static extern uint Soloud_getVoiceCount(IntPtr aObjHandle);
        public uint getVoiceCount()
        {
            return Soloud_getVoiceCount(objhandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_isValidVoiceHandle")]
        internal static extern int Soloud_isValidVoiceHandle(IntPtr aObjHandle, uint aVoiceHandle);
        public int isValidVoiceHandle(uint aVoiceHandle)
        {
            return Soloud_isValidVoiceHandle(objhandle, aVoiceHandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getRelativePlaySpeed")]
        internal static extern float Soloud_getRelativePlaySpeed(IntPtr aObjHandle, uint aVoiceHandle);
        public float getRelativePlaySpeed(uint aVoiceHandle)
        {
            return Soloud_getRelativePlaySpeed(objhandle, aVoiceHandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getPostClipScaler")]
        internal static extern float Soloud_getPostClipScaler(IntPtr aObjHandle);
        public float getPostClipScaler()
        {
            return Soloud_getPostClipScaler(objhandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getGlobalVolume")]
        internal static extern float Soloud_getGlobalVolume(IntPtr aObjHandle);
        public float getGlobalVolume()
        {
            return Soloud_getGlobalVolume(objhandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getMaxActiveVoiceCount")]
        internal static extern uint Soloud_getMaxActiveVoiceCount(IntPtr aObjHandle);
        public uint getMaxActiveVoiceCount()
        {
            return Soloud_getMaxActiveVoiceCount(objhandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getLooping")]
        internal static extern int Soloud_getLooping(IntPtr aObjHandle, uint aVoiceHandle);
        public int getLooping(uint aVoiceHandle)
        {
            return Soloud_getLooping(objhandle, aVoiceHandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getLoopPoint")]
        internal static extern double Soloud_getLoopPoint(IntPtr aObjHandle, uint aVoiceHandle);
        public double getLoopPoint(uint aVoiceHandle)
        {
            return Soloud_getLoopPoint(objhandle, aVoiceHandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_setLoopStartPoint")]
        internal static extern void Soloud_setLoopStartPoint(IntPtr aObjHandle, uint aVoiceHandle, double aLoopPoint);
        public void setLoopStartPoint(uint aVoiceHandle, double aLoopPoint)
        {
            Soloud_setLoopStartPoint(objhandle, aVoiceHandle, aLoopPoint);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_setLoopEndPoint")]
        internal static extern void Soloud_setLoopEndPoint(IntPtr aObjHandle, uint aVoiceHandle, double aLoopPoint);
        public void setLoopEndPoint(uint aVoiceHandle, double aLoopPoint)
        {
            Soloud_setLoopEndPoint(objhandle, aVoiceHandle, aLoopPoint);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_setLooping")]
        internal static extern void Soloud_setLooping(IntPtr aObjHandle, uint aVoiceHandle, int aLooping);
        public void setLooping(uint aVoiceHandle, int aLooping)
        {
            Soloud_setLooping(objhandle, aVoiceHandle, aLooping);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_setMaxActiveVoiceCount")]
        internal static extern int Soloud_setMaxActiveVoiceCount(IntPtr aObjHandle, uint aVoiceCount);
        public int setMaxActiveVoiceCount(uint aVoiceCount)
        {
            return Soloud_setMaxActiveVoiceCount(objhandle, aVoiceCount);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_setInaudibleBehavior")]
        internal static extern void Soloud_setInaudibleBehavior(IntPtr aObjHandle, uint aVoiceHandle, int aMustTick, int aKill);
        public void setInaudibleBehavior(uint aVoiceHandle, int aMustTick, int aKill)
        {
            Soloud_setInaudibleBehavior(objhandle, aVoiceHandle, aMustTick, aKill);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_setGlobalVolume")]
        internal static extern void Soloud_setGlobalVolume(IntPtr aObjHandle, float aVolume);
        public void setGlobalVolume(float aVolume)
        {
            Soloud_setGlobalVolume(objhandle, aVolume);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_setPostClipScaler")]
        internal static extern void Soloud_setPostClipScaler(IntPtr aObjHandle, float aScaler);
        public void setPostClipScaler(float aScaler)
        {
            Soloud_setPostClipScaler(objhandle, aScaler);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_setPause")]
        internal static extern void Soloud_setPause(IntPtr aObjHandle, uint aVoiceHandle, int aPause);
        public void setPause(uint aVoiceHandle, int aPause)
        {
            Soloud_setPause(objhandle, aVoiceHandle, aPause);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_setPauseAll")]
        internal static extern void Soloud_setPauseAll(IntPtr aObjHandle, int aPause);
        public void setPauseAll(int aPause)
        {
            Soloud_setPauseAll(objhandle, aPause);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_setRelativePlaySpeed")]
        internal static extern int Soloud_setRelativePlaySpeed(IntPtr aObjHandle, uint aVoiceHandle, float aSpeed);
        public int setRelativePlaySpeed(uint aVoiceHandle, float aSpeed)
        {
            return Soloud_setRelativePlaySpeed(objhandle, aVoiceHandle, aSpeed);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_setProtectVoice")]
        internal static extern void Soloud_setProtectVoice(IntPtr aObjHandle, uint aVoiceHandle, int aProtect);
        public void setProtectVoice(uint aVoiceHandle, int aProtect)
        {
            Soloud_setProtectVoice(objhandle, aVoiceHandle, aProtect);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_setSamplerate")]
        internal static extern void Soloud_setSamplerate(IntPtr aObjHandle, uint aVoiceHandle, float aSamplerate);
        public void setSamplerate(uint aVoiceHandle, float aSamplerate)
        {
            Soloud_setSamplerate(objhandle, aVoiceHandle, aSamplerate);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_setPan")]
        internal static extern void Soloud_setPan(IntPtr aObjHandle, uint aVoiceHandle, float aPan);
        public void setPan(uint aVoiceHandle, float aPan)
        {
            Soloud_setPan(objhandle, aVoiceHandle, aPan);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_setPanAbsoluteEx")]
        internal static extern void Soloud_setPanAbsoluteEx(IntPtr aObjHandle, uint aVoiceHandle, float aLVolume, float aRVolume, float aLBVolume, float aRBVolume, float aCVolume, float aSVolume);
        public void setPanAbsolute(uint aVoiceHandle, float aLVolume, float aRVolume, float aLBVolume = 0, float aRBVolume = 0, float aCVolume = 0, float aSVolume = 0)
        {
            Soloud_setPanAbsoluteEx(objhandle, aVoiceHandle, aLVolume, aRVolume, aLBVolume, aRBVolume, aCVolume, aSVolume);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_setVolume")]
        internal static extern void Soloud_setVolume(IntPtr aObjHandle, uint aVoiceHandle, float aVolume);
        public void setVolume(uint aVoiceHandle, float aVolume)
        {
            Soloud_setVolume(objhandle, aVoiceHandle, aVolume);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_setDelaySamples")]
        internal static extern void Soloud_setDelaySamples(IntPtr aObjHandle, uint aVoiceHandle, uint aSamples);
        public void setDelaySamples(uint aVoiceHandle, uint aSamples)
        {
            Soloud_setDelaySamples(objhandle, aVoiceHandle, aSamples);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_fadeVolume")]
        internal static extern void Soloud_fadeVolume(IntPtr aObjHandle, uint aVoiceHandle, float aTo, double aTime);
        public void fadeVolume(uint aVoiceHandle, float aTo, double aTime)
        {
            Soloud_fadeVolume(objhandle, aVoiceHandle, aTo, aTime);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_fadePan")]
        internal static extern void Soloud_fadePan(IntPtr aObjHandle, uint aVoiceHandle, float aTo, double aTime);
        public void fadePan(uint aVoiceHandle, float aTo, double aTime)
        {
            Soloud_fadePan(objhandle, aVoiceHandle, aTo, aTime);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_fadeRelativePlaySpeed")]
        internal static extern void Soloud_fadeRelativePlaySpeed(IntPtr aObjHandle, uint aVoiceHandle, float aTo, double aTime);
        public void fadeRelativePlaySpeed(uint aVoiceHandle, float aTo, double aTime)
        {
            Soloud_fadeRelativePlaySpeed(objhandle, aVoiceHandle, aTo, aTime);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_fadeGlobalVolume")]
        internal static extern void Soloud_fadeGlobalVolume(IntPtr aObjHandle, float aTo, double aTime);
        public void fadeGlobalVolume(float aTo, double aTime)
        {
            Soloud_fadeGlobalVolume(objhandle, aTo, aTime);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_schedulePause")]
        internal static extern void Soloud_schedulePause(IntPtr aObjHandle, uint aVoiceHandle, double aTime);
        public void schedulePause(uint aVoiceHandle, double aTime)
        {
            Soloud_schedulePause(objhandle, aVoiceHandle, aTime);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_scheduleStop")]
        internal static extern void Soloud_scheduleStop(IntPtr aObjHandle, uint aVoiceHandle, double aTime);
        public void scheduleStop(uint aVoiceHandle, double aTime)
        {
            Soloud_scheduleStop(objhandle, aVoiceHandle, aTime);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_oscillateVolume")]
        internal static extern void Soloud_oscillateVolume(IntPtr aObjHandle, uint aVoiceHandle, float aFrom, float aTo, double aTime);
        public void oscillateVolume(uint aVoiceHandle, float aFrom, float aTo, double aTime)
        {
            Soloud_oscillateVolume(objhandle, aVoiceHandle, aFrom, aTo, aTime);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_oscillatePan")]
        internal static extern void Soloud_oscillatePan(IntPtr aObjHandle, uint aVoiceHandle, float aFrom, float aTo, double aTime);
        public void oscillatePan(uint aVoiceHandle, float aFrom, float aTo, double aTime)
        {
            Soloud_oscillatePan(objhandle, aVoiceHandle, aFrom, aTo, aTime);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_oscillateRelativePlaySpeed")]
        internal static extern void Soloud_oscillateRelativePlaySpeed(IntPtr aObjHandle, uint aVoiceHandle, float aFrom, float aTo, double aTime);
        public void oscillateRelativePlaySpeed(uint aVoiceHandle, float aFrom, float aTo, double aTime)
        {
            Soloud_oscillateRelativePlaySpeed(objhandle, aVoiceHandle, aFrom, aTo, aTime);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_oscillateGlobalVolume")]
        internal static extern void Soloud_oscillateGlobalVolume(IntPtr aObjHandle, float aFrom, float aTo, double aTime);
        public void oscillateGlobalVolume(float aFrom, float aTo, double aTime)
        {
            Soloud_oscillateGlobalVolume(objhandle, aFrom, aTo, aTime);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_setGlobalFilter")]
        internal static extern void Soloud_setGlobalFilter(IntPtr aObjHandle, uint aFilterId, IntPtr aFilter);
        public void setGlobalFilter(uint aFilterId, SoloudObject aFilter)
        {
            Soloud_setGlobalFilter(objhandle, aFilterId, aFilter.objhandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_setVisualizationEnable")]
        internal static extern void Soloud_setVisualizationEnable(IntPtr aObjHandle, int aEnable);
        public void setVisualizationEnable(int aEnable)
        {
            Soloud_setVisualizationEnable(objhandle, aEnable);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_calcFFT")]
        internal static extern IntPtr Soloud_calcFFT(IntPtr aObjHandle);
        public float[] calcFFT()
        {
            float[] ret = new float[256];
            IntPtr p = Soloud_calcFFT(objhandle);

            byte[] buffer = new byte[4];
            for (int i = 0; i < ret.Length; ++i)
            {
                int f_bits = Marshal.ReadInt32(p, i * 4);
                buffer[0] = (byte)((f_bits >> 0) & 0xff);
                buffer[1] = (byte)((f_bits >> 8) & 0xff);
                buffer[2] = (byte)((f_bits >> 16) & 0xff);
                buffer[3] = (byte)((f_bits >> 24) & 0xff);
                ret[i] = BitConverter.ToSingle(buffer, 0);
            }
            return ret;
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getWave")]
        internal static extern IntPtr Soloud_getWave(IntPtr aObjHandle);
        public float[] getWave()
        {
            float[] ret = new float[256];
            IntPtr p = Soloud_getWave(objhandle);

            byte[] buffer = new byte[4];
            for (int i = 0; i < ret.Length; ++i)
            {
                int f_bits = Marshal.ReadInt32(p, i * 4);
                buffer[0] = (byte)((f_bits >> 0) & 0xff);
                buffer[1] = (byte)((f_bits >> 8) & 0xff);
                buffer[2] = (byte)((f_bits >> 16) & 0xff);
                buffer[3] = (byte)((f_bits >> 24) & 0xff);
                ret[i] = BitConverter.ToSingle(buffer, 0);
            }
            return ret;
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getApproximateVolume")]
        internal static extern float Soloud_getApproximateVolume(IntPtr aObjHandle, uint aChannel);
        public float getApproximateVolume(uint aChannel)
        {
            return Soloud_getApproximateVolume(objhandle, aChannel);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getLoopCount")]
        internal static extern uint Soloud_getLoopCount(IntPtr aObjHandle, uint aVoiceHandle);
        public uint getLoopCount(uint aVoiceHandle)
        {
            return Soloud_getLoopCount(objhandle, aVoiceHandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_getInfo")]
        internal static extern float Soloud_getInfo(IntPtr aObjHandle, uint aVoiceHandle, uint aInfoKey);
        public float getInfo(uint aVoiceHandle, uint aInfoKey)
        {
            return Soloud_getInfo(objhandle, aVoiceHandle, aInfoKey);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_createVoiceGroup")]
        internal static extern uint Soloud_createVoiceGroup(IntPtr aObjHandle);
        public uint createVoiceGroup()
        {
            return Soloud_createVoiceGroup(objhandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_destroyVoiceGroup")]
        internal static extern int Soloud_destroyVoiceGroup(IntPtr aObjHandle, uint aVoiceGroupHandle);
        public int destroyVoiceGroup(uint aVoiceGroupHandle)
        {
            return Soloud_destroyVoiceGroup(objhandle, aVoiceGroupHandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_addVoiceToGroup")]
        internal static extern int Soloud_addVoiceToGroup(IntPtr aObjHandle, uint aVoiceGroupHandle, uint aVoiceHandle);
        public int addVoiceToGroup(uint aVoiceGroupHandle, uint aVoiceHandle)
        {
            return Soloud_addVoiceToGroup(objhandle, aVoiceGroupHandle, aVoiceHandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_isVoiceGroup")]
        internal static extern int Soloud_isVoiceGroup(IntPtr aObjHandle, uint aVoiceGroupHandle);
        public int isVoiceGroup(uint aVoiceGroupHandle)
        {
            return Soloud_isVoiceGroup(objhandle, aVoiceGroupHandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_isVoiceGroupEmpty")]
        internal static extern int Soloud_isVoiceGroupEmpty(IntPtr aObjHandle, uint aVoiceGroupHandle);
        public int isVoiceGroupEmpty(uint aVoiceGroupHandle)
        {
            return Soloud_isVoiceGroupEmpty(objhandle, aVoiceGroupHandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_update3dAudio")]
        internal static extern void Soloud_update3dAudio(IntPtr aObjHandle);
        public void update3dAudio()
        {
            Soloud_update3dAudio(objhandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_set3dSoundSpeed")]
        internal static extern int Soloud_set3dSoundSpeed(IntPtr aObjHandle, float aSpeed);
        public int set3dSoundSpeed(float aSpeed)
        {
            return Soloud_set3dSoundSpeed(objhandle, aSpeed);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_get3dSoundSpeed")]
        internal static extern float Soloud_get3dSoundSpeed(IntPtr aObjHandle);
        public float get3dSoundSpeed()
        {
            return Soloud_get3dSoundSpeed(objhandle);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_set3dListenerParametersEx")]
        internal static extern void Soloud_set3dListenerParametersEx(IntPtr aObjHandle, float aPosX, float aPosY, float aPosZ, float aAtX, float aAtY, float aAtZ, float aUpX, float aUpY, float aUpZ, float aVelocityX, float aVelocityY, float aVelocityZ);
        public void set3dListenerParameters(float aPosX, float aPosY, float aPosZ, float aAtX, float aAtY, float aAtZ, float aUpX, float aUpY, float aUpZ, float aVelocityX = 0.0f, float aVelocityY = 0.0f, float aVelocityZ = 0.0f)
        {
            Soloud_set3dListenerParametersEx(objhandle, aPosX, aPosY, aPosZ, aAtX, aAtY, aAtZ, aUpX, aUpY, aUpZ, aVelocityX, aVelocityY, aVelocityZ);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_set3dListenerPosition")]
        internal static extern void Soloud_set3dListenerPosition(IntPtr aObjHandle, float aPosX, float aPosY, float aPosZ);
        public void set3dListenerPosition(float aPosX, float aPosY, float aPosZ)
        {
            Soloud_set3dListenerPosition(objhandle, aPosX, aPosY, aPosZ);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_set3dListenerAt")]
        internal static extern void Soloud_set3dListenerAt(IntPtr aObjHandle, float aAtX, float aAtY, float aAtZ);
        public void set3dListenerAt(float aAtX, float aAtY, float aAtZ)
        {
            Soloud_set3dListenerAt(objhandle, aAtX, aAtY, aAtZ);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_set3dListenerUp")]
        internal static extern void Soloud_set3dListenerUp(IntPtr aObjHandle, float aUpX, float aUpY, float aUpZ);
        public void set3dListenerUp(float aUpX, float aUpY, float aUpZ)
        {
            Soloud_set3dListenerUp(objhandle, aUpX, aUpY, aUpZ);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_set3dListenerVelocity")]
        internal static extern void Soloud_set3dListenerVelocity(IntPtr aObjHandle, float aVelocityX, float aVelocityY, float aVelocityZ);
        public void set3dListenerVelocity(float aVelocityX, float aVelocityY, float aVelocityZ)
        {
            Soloud_set3dListenerVelocity(objhandle, aVelocityX, aVelocityY, aVelocityZ);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_set3dSourceParametersEx")]
        internal static extern void Soloud_set3dSourceParametersEx(IntPtr aObjHandle, uint aVoiceHandle, float aPosX, float aPosY, float aPosZ, float aVelocityX, float aVelocityY, float aVelocityZ);
        public void set3dSourceParameters(uint aVoiceHandle, float aPosX, float aPosY, float aPosZ, float aVelocityX = 0.0f, float aVelocityY = 0.0f, float aVelocityZ = 0.0f)
        {
            Soloud_set3dSourceParametersEx(objhandle, aVoiceHandle, aPosX, aPosY, aPosZ, aVelocityX, aVelocityY, aVelocityZ);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_set3dSourcePosition")]
        internal static extern void Soloud_set3dSourcePosition(IntPtr aObjHandle, uint aVoiceHandle, float aPosX, float aPosY, float aPosZ);
        public void set3dSourcePosition(uint aVoiceHandle, float aPosX, float aPosY, float aPosZ)
        {
            Soloud_set3dSourcePosition(objhandle, aVoiceHandle, aPosX, aPosY, aPosZ);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_set3dSourceVelocity")]
        internal static extern void Soloud_set3dSourceVelocity(IntPtr aObjHandle, uint aVoiceHandle, float aVelocityX, float aVelocityY, float aVelocityZ);
        public void set3dSourceVelocity(uint aVoiceHandle, float aVelocityX, float aVelocityY, float aVelocityZ)
        {
            Soloud_set3dSourceVelocity(objhandle, aVoiceHandle, aVelocityX, aVelocityY, aVelocityZ);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_set3dSourceMinMaxDistance")]
        internal static extern void Soloud_set3dSourceMinMaxDistance(IntPtr aObjHandle, uint aVoiceHandle, float aMinDistance, float aMaxDistance);
        public void set3dSourceMinMaxDistance(uint aVoiceHandle, float aMinDistance, float aMaxDistance)
        {
            Soloud_set3dSourceMinMaxDistance(objhandle, aVoiceHandle, aMinDistance, aMaxDistance);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_set3dSourceAttenuation")]
        internal static extern void Soloud_set3dSourceAttenuation(IntPtr aObjHandle, uint aVoiceHandle, uint aAttenuationModel, float aAttenuationRolloffFactor);
        public void set3dSourceAttenuation(uint aVoiceHandle, uint aAttenuationModel, float aAttenuationRolloffFactor)
        {
            Soloud_set3dSourceAttenuation(objhandle, aVoiceHandle, aAttenuationModel, aAttenuationRolloffFactor);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_set3dSourceDopplerFactor")]
        internal static extern void Soloud_set3dSourceDopplerFactor(IntPtr aObjHandle, uint aVoiceHandle, float aDopplerFactor);
        public void set3dSourceDopplerFactor(uint aVoiceHandle, float aDopplerFactor)
        {
            Soloud_set3dSourceDopplerFactor(objhandle, aVoiceHandle, aDopplerFactor);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_mix")]
        internal static extern void Soloud_mix(IntPtr aObjHandle, float[] aBuffer, uint aSamples);
        public void mix(float[] aBuffer, uint aSamples)
        {
            Soloud_mix(objhandle, aBuffer, aSamples);
        }

        [DllImport("soloud", CallingConvention = CallingConvention.Cdecl, EntryPoint = "Soloud_mixSigned16")]
        internal static extern void Soloud_mixSigned16(IntPtr aObjHandle, IntPtr aBuffer, uint aSamples);
        public void mixSigned16(IntPtr aBuffer, uint aSamples)
        {
            Soloud_mixSigned16(objhandle, aBuffer, aSamples);
        }
    }
}
