Shader "PSX/BattleMap_StatusEffect_RealLighting" {
	Properties {
		_Color ("Main Color", Color) = (1,1,1,1)
		_MainTex ("Base (RGB) Trans (A)", 2D) = "white" { }
		_DetailTex ("Detail Texture", 2D) = "white" { }
		_Cutoff ("Alpha cutoff", Range(0,1)) = 0.5
		_IsPetrify ("is petrify", Float) = 0
		_IsEnemy ("Is Enemy", Float) = 0.000000
		_StencilOp ("stencil op", Float) = 2
		_OutlineWidth ("Outline width", Float) = 2
	}
	SubShader { 
		LOD 100
		Tags { "QUEUE"="AlphaTest+3" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutOff" }
		Pass {
			Tags { "LightMode" = "ForwardBase" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutOff" }
			GpuProgramID 15200
			
			Stencil
            {
              Ref 101
              Comp Always
              Pass [_StencilOp]
            }

			Program "vp" {
				SubProgram "d3d9 " {
					Bind "vertex" Vertex
					Bind "texcoord" TexCoord0
					Bind "normal" Normal
					Matrix 0 [glstate_matrix_modelview0]
					Matrix 4 [glstate_matrix_projection]
					Vector 8 [_ProjectionParams]
					Vector 9 [_MainTex_ST]
					Vector 10 [_DetailTex_ST]
					"vs_2_0
						def c11, 20, 1, 60000, 0
						def c12, 1, 0, 0, 0
						def c13, 0.200000003, 0.300000012, 2, 0
						dcl_position v0
						dcl_texcoord v1
						dcl_normal v2
						dp4 r0.x, c0, v0
						dp4 r0.y, c1, v0
						dp4 r0.w, c3, v0
						dp4 r0.z, c2, v0
						dp4 r1.x, c7, r0
						rcp r1.x, r1.x
						dp4 r2.x, c4, r0
						dp4 r2.y, c5, r0
						mov r3.xyw, r0
						mul oPos.xy, r1.x, r2
						mov r0.xw, c11.xyzy
						add r0.x, r0.x, c8.y
						add r3.z, -r0.x, r0.z
						sge r0.x, r0.z, -r0.x
						dp4 r0.y, c7, r3
						dp4 r0.z, c6, r3
						rcp r0.y, r0.y
						mul r0.z, r0.y, r0.z
						add r1.xy, -r0.zwzw, c11.zyzw
						mad oPos.zw, r0.x, r1.xyxy, r0
						mad oT0.xy, v1, c9, c9.zwzw
						mad oT0.zw, v1.xyxy, c10.xyxy, c10
						mad r4, v0.xyzx, c12.xxxy, c12.yyyx
						dp3 r4.x, c0, v2
                        dp3 r4.y, c1, v2
                        dp3 r4.z, c2, v2
                        dp3 r4.w, r4, r4
                        rsq r4.w, r4.w
                        mul oT1.xyz, r4.w, r4
                        mad r5, v0.xyzx, c12.xxxy, c12.yyyx
                        dp4 r6.x, c0, r5
                        dp4 r6.y, c1, r5
                        dp4 r6.z, c2, r5
                        add r5.xyz, -r6, c13
                        dp3 r5.w, r5, r5
                        rsq r5.w, r5.w
                        mul oT2.xyz, r5.w, r5
						"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					Vector 0 [unity_SHAr]
					Vector 1 [unity_SHAg]
					Vector 2 [unity_SHAb]
					Float 3 [_IsPetrify]
					Vector 4 [_Color]
					Float 5 [_Cutoff]
					Float 6 [_IsEnemy]
					SetTexture 0 [_MainTex] 2D 0
					SetTexture 1 [_DetailTex] 2D 1
					"ps_3_0
                        def c7, -0, -1, -0.5, 0.200000003
                        def c8, 0.5, -0.823500037, 1.25, 0.100000001
                        def c9, -0.89442718, 0.35777089, 0.26832816, 0.699999988
                        def c10, 1.57791328, 0.325715214, -0.524635434, 0.300000012
                        def c11, -2, 3, 0.909090877, -1.81818175
                        def c12, 0.416666657, 1.05499995, -0.0549999997, 0
                        def c13, 16, 1, -1, 0
                        dcl_texcoord v0
                        dcl_texcoord1 v1.xyz
                        dcl_texcoord2 v2.xyz
                        dcl_2d s0
                        dcl_2d s1
                        texld r0, v0, s0
                        add r0.w, r0.w, -c5.x
                        cmp r1, r0.w, c7.x, c7.y
                        texkill r1
                        texld r1, v0.zwzw, s1
                        add r1.yzw, r0.xxyz, c4.xxyz
                        add r1.yzw, r1, c7.z
                        mul r0.w, r1.x, c7.w
                        mad r2.xyz, r1.yzww, r0.w, -r1.yzww
                        mad r1.xyz, c3.x, r2, r1.yzww
                        add r0.w, -r0.y, r0.x
                        cmp r2.xy, r0.w, r0.yxzw, r0
                        min r1.w, r0.z, r2.x
                        max r3.x, r2.y, r0.z
                        add r0.w, r1.w, r3.x
                        mad_pp r0.w, r0.w, c8.x, c8.y
                        add r0.w, -r0_abs.w, -c7.y
                        add_sat r0.w, r0.w, r0.w
                        add r0.w, r0.w, -c7.w
                        mul r0.w, r0.w, c8.z
                        max r1.w, r0.w, -c7.x
                        mad r0.w, r1.w, c11.x, c11.y
                        mul r1.w, r1.w, r1.w
                        mad r0.w, r0.w, -r1.w, -c7.y
                        dp3 r1.w, v2, v2
                        rsq r1.w, r1.w
                        mov r2.x, c6.x
                        mov r3, c10
                        mad r2, r2.x, r3, c9
                        nrm_pp r3, v1.xyzx
                        dp3_sat_pp r4.x, r3.wyzw, r2
                        add_pp r4.x, r4.x, c8.w
                        mul_pp r4.y, r4.x, c11.z
                        mad_pp r4.x, r4.x, c11.w, c11.y
                        mul_pp r4.y, r4.y, r4.y
                        mul_pp r4.x, r4.y, r4.x
                        mad r2.xyz, v2, r1.w, r2
                        nrm_pp r5.xyz, r2
                        dp3_sat_pp r1.w, r5, r3
                        pow_pp r2.x, r1.w, c13.x
                        mul r0.w, r0.w, r2.x
                        mul_pp r0.w, r2.w, r0.w
                        mad r1.xyz, r1, r4.x, r0.w
                        mad_pp r2, r3, c13.yzyw, c13.wwwy
                        dp4_pp r3.x, c0, r2
                        dp4_pp r3.y, c1, r2
                        dp4_pp r3.z, c2, r2
                        max_pp r2.xyz, r3, -c7.x
                        log_pp r3.x, r2.x
                        log_pp r3.y, r2.y
                        log_pp r3.z, r2.z
                        mul_pp r2.xyz, r3, c12.x
                        exp_pp r3.x, r2.x
                        exp_pp r3.y, r2.y
                        exp_pp r3.z, r2.z
                        mad_pp r2.xyz, r3, c12.y, c12.z
                        mul_pp r0.xyz, r0, r2
                        cmp_pp r0.xyz, r2, r0, -c7.x
                        add_pp oC0.xyz, r0, r1
                        mov_pp oC0.w, -c7.y
						"
				}
			}
		}
		Pass {
		    Name "OUTLINE"
		    Cull Front
			Tags { "QUEUE"="AlphaTest+3" "IGNOREPROJECTOR"="true" "RenderType"="TransparentCutOff" }
			Program "vp" {
				SubProgram "d3d9 " {
					Bind "vertex" Vertex
					Bind "texcoord" TexCoord0
					Bind "normal" Normal
					Matrix 0 [glstate_matrix_modelview0]
					Matrix 4 [glstate_matrix_projection]
					Vector 8 [_ProjectionParams]
					Vector 9 [_MainTex_ST]
					Vector 10 [_DetailTex_ST]
					Float 11 [_IsEnemy]
					Float 12 [_OutlineWidth]
					"vs_2_0
						def c15, 20, 1, 60000, 0
						def c16, 1, 0, 0, 0
						def c17, 3, 0, 0, 0
						dcl_position v0
						dcl_texcoord v1
						dcl_normal v2
						mov r5.x, c12.x
                        mad r5.x, c11.x, r5.x, r5.x
                        nrm r4.xyz, v2
                        mad r5.xyz, r4, r5.x, v0
                        mov r5.w, c16.x
						dp4 r0.x, c0, r5
						dp4 r0.y, c1, r5
						dp4 r0.w, c3, r5
						dp4 r0.z, c2, r5
						dp4 r1.x, c7, r0
						rcp r1.x, r1.x
						dp4 r2.x, c4, r0
						dp4 r2.y, c5, r0
						mov r3.xyw, r0
						mul oPos.xy, r1.x, r2
						mov r0.xw, c15.xyzy
						add r0.x, r0.x, c8.y
						add r3.z, -r0.x, r0.z
						sge r0.x, r0.z, -r0.x
						dp4 r0.y, c7, r3
						dp4 r0.z, c6, r3
						rcp r0.y, r0.y
						mul r0.z, r0.y, r0.z
						add r1.xy, -r0.zwzw, c15.zyzw
						mad oPos.zw, r0.x, r1.xyxy, r0
						mad oT0.xy, v1, c9, c9.zwzw
						mad oT0.zw, v1.xyxy, c10.xyxy, c10
						"
				}
			}
			Program "fp" {
				SubProgram "d3d9 " {
					Float 0 [_Cutoff]
					Float 1 [_ShowOutline]
					SetTexture 0 [_MainTex] 2D 0
					"ps_2_0
                        def c2, -1, -0, 0.100000001, 1
                        dcl t0.xy
                        dcl_2d s0
                        mov r0.xy, c2
                        cmp r0, -c1.x, r0.x, r0.y
                        texkill r0
                        texld r0, t0, s0
                        add r0.w, r0.w, -c0.x
                        cmp r1, r0.w, c2.y, c2.x
                        texkill r1
                        mul_pp r0.xyz, r0, c2.z
                        mov_pp r0.w, c2.w
                        mov_pp oC0, r0
						"
				}
			}
		}
	}
}