<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="TransparentGridStyle" TargetType="Border">
        <Setter Property="Background" Value="#b000" />
        <Setter Property="CornerRadius" Value="0,12,12,12" />
    </Style>
    <Style x:Key="MainTabs" TargetType="TabItem">
        <Setter Property="Background" Value="#D000" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Margin" Value="-4,2,0,0" />
        <Setter Property="Height" Value="45" />
        <Setter Property="Tag" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid Width="160" Margin="0,0,2,0">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="15,15,0,0" BorderThickness="0,2,0,0" BorderBrush="#6666" >
                            <Border >
                                <StackPanel x:Name="contentwrap" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Image x:Name="IncompatImage" Source="/images/alert_incompat.png" Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}, Path=Tag}" Height="16" Margin="0" Visibility="Collapsed" />
                                    <Image x:Name="UpdateImage" Source="/images/alert_update.png" Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}, Path=Tag}" Height="16" Margin="0" Visibility="Collapsed" />
                                    <ContentPresenter x:Name="content" 
                                        ContentSource="Header"
                                        VerticalAlignment="Center"
                                        TextBlock.FontSize="{TemplateBinding FontSize}"
                                        TextBlock.FontFamily="{DynamicResource CenturyGothic}"
                                        TextBlock.FontWeight="{TemplateBinding FontWeight}"
                                        TextBlock.Foreground="#aaa">
                                    </ContentPresenter>
                                </StackPanel>
                            </Border>
                        </Border>
                        <Rectangle x:Name="underline"
                            Fill="{DynamicResource BrushLightColorNormal}"
                            Height="2"
                            Width="{Binding ActualWidth, ElementName=contentwrap}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Bottom"
                            Margin="100,0,100,6"/>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding AreThereModIncompatibilies}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="IncompatImage" Property="Visibility" Value="Visible" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding AreThereModUpdates}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="UpdateImage" Property="Visibility" Value="Visible" />
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Margin" Value="-4,1,0,0" />
                            <Setter TargetName="content" Property="TextElement.Foreground" Value="{DynamicResource BrushLightColorNormal}"/>
                        </Trigger>
                        <Trigger SourceName="border" Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Margin" Value="-4,0,0,0" />
                            <Setter Property="Background" Value="#b000" />
                            <Setter TargetName="content" Property="TextElement.Foreground" Value="{DynamicResource BrushLightColorNormal}"/>
                            <Setter TargetName="content" Property="TextElement.FontWeight" Value="Bold"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="underline" Storyboard.TargetProperty="Margin" BeginTime="00:00:00">
                                            <SplineThicknessKeyFrame KeyTime="00:00:00" Value="100,0,100,5" />
                                            <SplineThicknessKeyFrame KeyTime="00:00:0.2" Value="0,0,0,5" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="underline" Storyboard.TargetProperty="Margin" BeginTime="00:00:00">
                                            <SplineThicknessKeyFrame KeyTime="00:00:00" Value="0,0,0,5" />
                                            <SplineThicknessKeyFrame KeyTime="00:00:0.2" Value="100,0,100,5" />
                                        </ThicknessAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>