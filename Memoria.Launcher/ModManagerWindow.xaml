<Window x:Class="Memoria.Launcher.ModManagerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="{Binding WindowTitle, FallbackValue='Memoria Mod Manager'}"
        WindowStartupLocation="CenterScreen"
        Height="600" Width="1100"
        MinHeight="520" MinWidth="870"
        WindowState="Maximized">
    <Window.Resources>

        <Style x:Key="ModInfoLabelStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Margin" Value="0,0,3,1"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
        </Style>

        <Style x:Key="ModInfoDetailsStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource ModInfoLabelStyle}">
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>

        <Style x:Key="ReadMeStyle" TargetType="{x:Type Button}">
            <Setter Property="Content" Value="{DynamicResource ClickHere}"/>
            <Setter Property="Padding" Value="5,2,2,2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding PreviewModHasReadMe}" Value="False">
                    <Setter Property="Content" Value="{DynamicResource None}"/>
                    <Setter Property="Padding" Value="2"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="OpenLinkStyle" TargetType="{x:Type Button}">
            <Setter Property="Content" Value="{DynamicResource ClickHere}"/>
            <Setter Property="Padding" Value="5,2,2,2"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding PreviewModHasLink, FallbackValue='False'}" Value="False">
                    <Setter Property="Content" Value="{DynamicResource None}"/>
                    <Setter Property="Padding" Value="2"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MainListViewItemStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="BorderThickness" Value="0,0,0,0"/>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryControlPressed}"/>
            <Setter Property="FocusVisualStyle" Value="{DynamicResource MainFocusVisualStyle}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Grid>
                            <Rectangle x:Name="bg" Fill="Transparent" Opacity="1" IsHitTestVisible="False"/>
                            <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="{DynamicResource PrimaryControlForeground}"/>
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                                <Setter TargetName="bg" Property="Fill" Value="{DynamicResource PrimaryControlMouseOver}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="bg" Property="Fill" Value="{DynamicResource PrimaryControlPressed}"/>
                            </Trigger>

                            <!--Checking the Tag property to determine if background should be slightly transparent-->
                            <Trigger Property="Tag" Value="TransparentBg">
                                <Setter TargetName="bg" Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ControlListViewItemStyle" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource MainListViewItemStyle}">
            <Setter Property="Height" Value="34"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </Style>

        <Style x:Key="ModListViewItem" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ControlListViewItemStyle}">
            <EventSetter Event="MouseDoubleClick" Handler="OnModListDoubleClick"/>
            <EventSetter Event="Selected" Handler="OnModListSelect"/>
            <Setter Property="Tag" Value="TransparentBg"/>

            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=ctrlCatalog, Path=DataContext.ThemeImage}" Value="{x:Null}">
                    <Setter Property="Tag" Value=""/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DownloadListViewItem" TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource ControlListViewItemStyle}">
            <Setter Property="Tag" Value="TransparentBg"/>

            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSelected}" Value="False">
                    <Setter Property="Tag" Value=""/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SmallImageButton"  TargetType="{x:Type Button}">
            <Setter Property="Height" Value="44"/>
            <Setter Property="Width" Value="44"/>
        </Style>

        <DataTemplate x:Key="FilterItemTemplate">
            <Border Background="{DynamicResource PrimaryControlBackground}" Padding="5" Focusable="False">
                <CheckBox Content="{Binding Name, FallbackValue='Category Name'}"
                          IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Border>
        </DataTemplate>

        <DataTemplate x:Key="FilterItemSeparatorTemplate">
            <Border Background="{DynamicResource SecondaryAppBackground}" Height="2" Padding="5" Focusable="False"/>
        </DataTemplate>

        <Style x:Key="CategoryFilterListBoxItem" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="{DynamicResource PrimaryControlBackground}"/>
            <Setter Property="ContentTemplate" Value="{StaticResource FilterItemTemplate}"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="{DynamicResource PrimaryControlForeground}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                        </Border>

                        <ControlTemplate.Triggers>

                            <DataTrigger Binding="{Binding FilterType, FallbackValue='0'}" Value="3">
                                <Setter Property="ContentTemplate" Value="{StaticResource FilterItemSeparatorTemplate}"/>
                                <Setter Property="IsEnabled" Value="False"/>
                                <Setter Property="IsHitTestVisible" Value="False"/>
                                <Setter Property="Focusable" Value="False"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Canvas x:Key="iconDownload" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_download" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
            <Path Width="26" Height="41" Canvas.Left="7" Stretch="Fill" Fill="Black" Data="F1 M 25,52L 51,52L 51,57L 25,57L 25,52 Z M 35,16L 41,16L 41,36.5L 49,27L 49,36.5L 38,49L 27,36.5L 27,27L 35,36.5L 35,16 Z "/>
        </Canvas>

        <Canvas x:Key="iconDownArrow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_arrow_down" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
            <Path Width="28" Height="39.25" Canvas.Left="6" Canvas.Top="1" Stretch="Fill" Fill="Black" Data="F1 M 42,19.0002L 34,19.0002L 34,43.7502L 24,33.7502L 24,44.2502L 38,58.2502L 52,44.2502L 52,33.7502L 42,43.7502L 42,19.0002 Z "/>
        </Canvas>

        <Canvas x:Key="iconUpArrow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_arrow_up" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
            <Path Width="28" Height="39.25" Canvas.Left="6" Stretch="Fill" Fill="Black" Data="F1 M 34,57L 42,57L 42,32.25L 52,42.25L 52,31.75L 38,17.75L 24,31.75L 24,42.25L 34,32.25L 34,57 Z "/>
        </Canvas>

        <Canvas x:Key="iconDelete" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_delete" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
            <Path Width="27.7083" Height="35.625" Canvas.Left="6" Canvas.Top="2" Stretch="Fill" Fill="Black" Data="F1 M 25.3333,23.75L 50.6667,23.75C 51.5411,23.75 51.8541,27.3125 51.8541,27.3125L 24.1458,27.3125C 24.1458,27.3125 24.4589,23.75 25.3333,23.75 Z M 35.625,19.7917L 40.375,19.7917C 40.8122,19.7917 41.9583,20.9378 41.9583,21.375C 41.9583,21.8122 40.8122,22.9584 40.375,22.9584L 35.625,22.9584C 35.1878,22.9584 34.0416,21.8122 34.0416,21.375C 34.0416,20.9378 35.1878,19.7917 35.625,19.7917 Z M 27.7083,28.5L 48.2916,28.5C 49.1661,28.5 49.875,29.2089 49.875,30.0834L 48.2916,53.8334C 48.2916,54.7078 47.5828,55.4167 46.7083,55.4167L 29.2917,55.4167C 28.4172,55.4167 27.7083,54.7078 27.7083,53.8334L 26.125,30.0834C 26.125,29.2089 26.8339,28.5 27.7083,28.5 Z M 30.0833,31.6667L 30.4792,52.25L 33.25,52.25L 32.8542,31.6667L 30.0833,31.6667 Z M 36.4167,31.6667L 36.4167,52.25L 39.5833,52.25L 39.5833,31.6667L 36.4167,31.6667 Z M 43.1458,31.6667L 42.75,52.25L 45.5208,52.25L 45.9167,31.6667L 43.1458,31.6667 Z "/>
        </Canvas>

        <Canvas x:Key="iconCheckmark" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_checkmark_thick" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
            <Path Width="34.2877" Height="29.4585" Canvas.Left="5" Canvas.Top="5" Stretch="Fill" Fill="Black" Data="F1 M 32.2209,33.4875L 39.1875,40.0582L 52.9627,24.5415L 56.2877,27.4707L 39.5834,47.5L 28.8959,36.8125L 32.2209,33.4875 Z M 22,25L 50,25L 45.5,30L 27,30L 27,49L 46,49L 46,42.5L 51,36.5L 51,54L 22,54L 22,25 Z "/>
        </Canvas>

        <Canvas x:Key="iconCancel" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_cancel" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
            <Path Width="38" Height="38" Canvas.Left="1" Canvas.Top="1" Stretch="Fill" Fill="Black" Data="F1 M 38,19C 48.4934,19 57,27.5066 57,38C 57,48.4934 48.4934,57 38,57C 27.5066,57 19,48.4934 19,38C 19,27.5066 27.5066,19 38,19 Z M 38,23.75C 35.2116,23.75 32.6102,24.5509 30.4134,25.9352L 50.0648,45.5866C 51.4491,43.3898 52.25,40.7884 52.25,38C 52.25,30.13 45.87,23.75 38,23.75 Z M 23.75,38C 23.75,45.8701 30.1299,52.25 38,52.25C 40.7884,52.25 43.3897,51.4491 45.5865,50.0649L 25.9351,30.4136C 24.5509,32.6103 23.75,35.2117 23.75,38 Z "/>
        </Canvas>

        <Canvas x:Key="iconStop" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" x:Name="appbar_cloud_delete" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
            <Path Width="41.1667" Height="27.4151" Canvas.Top="6" Stretch="Fill" Fill="Black" Data="F1 M 15.8333,41.3605L 19.1921,38.0017L 24.79,43.5996L 30.3879,38.0017L 33.7467,41.3605L 28.1488,46.9584L 33.7467,52.5563L 30.3879,55.9151L 24.79,50.3171L 19.1921,55.9151L 15.8333,52.5563L 21.4313,46.9584L 15.8333,41.3605 Z M 49.0833,33.25C 53.4555,33.25 57,36.7945 57,41.1667C 57,45.5389 53.4045,48.9999 49,49L 31.75,49L 29.8154,46.9584L 35.4133,41.3605L 30.3879,36.4283L 24.5867,42.2296L 22.3442,39.7371C 23.25,37 25.2617,34.9376 27.4553,34.8389C 28.7579,31.1462 32.2783,28.4999 36.4167,28.4999C 40.3459,28.4999 43.7179,30.8853 45.1637,34.2869C 46.3193,33.627 47.6573,33.25 49.0833,33.25 Z "/>
        </Canvas>
    </Window.Resources>

    <Grid Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="222*"/>
            <ColumnDefinition Width="139*"/>
            <ColumnDefinition Width="631*"/>
        </Grid.ColumnDefinitions>

        <GroupBox x:Name="GroupModInfo"
                  Header="Mod Infos"
                  Background="#383838FF"
                  Grid.Row="1"
                  Margin="5,0,3,1" Grid.ColumnSpan="2">
            <Grid x:Name="gridOuterMod">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1.25*"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Auto" HorizontalAlignment="Stretch">
                    <Grid x:Name="gridModInfo" Margin="0,0,0,3">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <WrapPanel Margin="3,5,3,0" Grid.Row="0">
                            <TextBlock x:Name="CaptionModName" Text="Name:" Style="{StaticResource ModInfoLabelStyle}"/>
                            <TextBlock x:Name="PreviewModName" Text=""
                               Style="{StaticResource ModInfoDetailsStyle}"
                               MinWidth="200"/>
                        </WrapPanel>
                        <WrapPanel Margin="0,0,0,0" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Width="auto" HorizontalAlignment="Right">
                        <Button x:Name="PreviewModWebsite"
                                    MinWidth="80"
                                    Content="Website"
                                    FontWeight="DemiBold"
                                    FontSize="12"
                                    Background="Transparent"
                                    Margin="5,5,5,5"
                                    ToolTip="{Binding PreviewModLink}"
                                    IsEnabled="False"
                                    Click="OnClickWebsite"
                                    Style="{StaticResource OpenLinkStyle}"/>
                        </WrapPanel>

                        <WrapPanel Margin="3,0,3,0" Grid.Row="1" Grid.ColumnSpan="2">
                            <TextBlock x:Name="CaptionModAuthor" Text="Author:" Style="{StaticResource ModInfoLabelStyle}"/>
                            <TextBlock x:Name="PreviewModAuthor" Text=""
                               Style="{StaticResource ModInfoDetailsStyle}"/>
                        </WrapPanel>

                        <WrapPanel Margin="3,0,3,0" Grid.Row="2" Grid.ColumnSpan="2">
                            <TextBlock x:Name="CaptionModRelease" Text="Released:" Style="{StaticResource ModInfoLabelStyle}"/>
                            <TextBlock x:Name="PreviewModRelease" Text=""
                                       Margin="2,0,10,1"
                                       Style="{StaticResource ModInfoDetailsStyle}"/>

                            <TextBlock x:Name="CaptionModCategory" Text="Category:" Style="{StaticResource ModInfoLabelStyle}"/>
                            <TextBlock x:Name="PreviewModCategory" Text=""
                                       Margin="2,0,0,1"
                                       Style="{StaticResource ModInfoDetailsStyle}"/>
                        </WrapPanel>

                        <WrapPanel Margin="3,3,3,0" Grid.Row="3" Grid.ColumnSpan="2">
                            <TextBlock x:Name="CaptionModVersion" Text="Version:" Style="{StaticResource ModInfoLabelStyle}"
                                       Margin="0,0,3,1"/>
                            <TextBlock x:Name="PreviewModVersion" Text=""
                                       Margin="2,0,3,1"
                                       Style="{StaticResource ModInfoDetailsStyle}"/>

                            <!--<Button x:Name="btnUpdateMod" 
                                    Content="{Binding UpdateModButtonText, FallbackValue='Update Available'}"
                                    IsEnabled="{Binding IsUpdateModButtonEnabled}"
                                    Visibility="{Binding ModUpdateMenuVisibility}"
                                    FontSize="12"
                                    Margin="0,0,0,0"
                                    MinWidth="120"
                                    Background="Transparent"/>-->
                        </WrapPanel>

                        <Popup x:Name="popupModUpdateType"
                               StaysOpen="False"
                               PlacementTarget="{Binding ElementName=btnUpdateModType}" 
                               HorizontalOffset="-116">
                            <Border x:Name="bd" BorderBrush="#1f1f1f" BorderThickness="1">
                                <StackPanel>
                                    <RadioButton FontSize="12" IsChecked="{Binding PreviewIsAutoUpdateModsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,3,5,3" GroupName="modUpdateType"/>
                                    <RadioButton FontSize="12" IsChecked="{Binding PreviewIgnoreModUpdatesChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,3,5,3" GroupName="modUpdateType"/>
                                    <RadioButton FontSize="12" IsChecked="{Binding PreviewIsNotifyAboutUpdatesChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,3,5,3" GroupName="modUpdateType"/>
                                </StackPanel>
                            </Border>
                        </Popup>

                        <WrapPanel Margin="3,0,3,10" Grid.Row="4" Grid.ColumnSpan="2">
                            <TextBlock x:Name="CaptionModDescription" Text="Description:" Style="{StaticResource ModInfoLabelStyle}"/>
                            <TextBlock x:Name="PreviewModDescription" Text=""
                               Style="{StaticResource ModInfoDetailsStyle}"/>
                        </WrapPanel>

                        <WrapPanel Margin="3,0,3,0" Grid.Row="5" Grid.ColumnSpan="2">
                            <TextBlock x:Name="CaptionModReleaseNotes" Text="Release Notes:" Style="{StaticResource ModInfoLabelStyle}"/>
                            <TextBlock x:Name="PreviewModReleaseNotes" Text=""
                                       Style="{StaticResource ModInfoDetailsStyle}"/>
                        </WrapPanel>
                    </Grid>
                </ScrollViewer>

                <Image Grid.Row="1"
                       Margin="3"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Bottom"
                       Stretch="Uniform"
                       RenderOptions.BitmapScalingMode="HighQuality">
                    <Image.Style>
                        <!--Custom style to hide image when loading-->
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding PreviewModImageSource, FallbackValue=''}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>

                <TextBlock x:Name="CaptionPreviewImageMissing"
                           Grid.Row="1"
                           Visibility="{Binding NoImageTextVisibility}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Text="No Preview Image"/>


            </Grid>
        </GroupBox>

        <TabControl x:Name="tabCtrlMain"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    Grid.Column="2"
                    SelectedIndex="0"
                    Margin="0,23,5,-2">
            <TabItem x:Name="tabCtrlMods" Padding="10,0,10,0">
                <TabItem.Header>
                    <TextBlock x:Name="tabMyMods"
                               Text="Installed Mods"
                               Padding="0"/>
                </TabItem.Header>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <Rectangle Fill="#383838FF"/>

                    <Image Margin="25"
               Source="{Binding ThemeImage}"
               Opacity="0.25"
               IsHitTestVisible="False"/>

                    <ListView x:Name="lstMods"
                  ItemsSource="{Binding modListInstalled}"
                  Background="Transparent"
                  AllowDrop="True"
                  ScrollViewer.HorizontalScrollBarVisibility="Auto"
                  ScrollViewer.CanContentScroll="False"
                  VirtualizingStackPanel.IsVirtualizing="False">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn x:Name="colMyModsPriority" Header="Priority" Width="50" DisplayMemberBinding="{Binding Priority}"/>
                                <GridViewColumn x:Name="colMyModsName" Header="Name" Width="Auto" DisplayMemberBinding="{Binding Name}"/>
                                <GridViewColumn x:Name="colMyModsAuthor" Header="Author" Width="Auto" DisplayMemberBinding="{Binding Author}"/>
                                <GridViewColumn x:Name="colMyModsCategory" Header="Category" Width="135" DisplayMemberBinding="{Binding Category}"/>
                                <GridViewColumn x:Name="colMyModsActive" Header="Active" Width="75">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox
                                                IsChecked="{Binding IsActive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                IsTabStop="False"
                                                HorizontalAlignment="Center"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>

                    </ListView>

                    <StackPanel Grid.Column="1"
                    x:Name="stackButtons"
                    VerticalAlignment="Top"
                    HorizontalAlignment="Right">

                        <Button x:Name="btnMoveUp"
                    TabIndex="21"
                    Click="OnClickMoveUp"
                    MouseRightButtonUp="OnClickSendTop"
                    Style="{StaticResource SmallImageButton}"
                    Content="{StaticResource iconUpArrow}"
                    ToolTip="Move Up/Right-Click to Move to Top"
                    Margin="0,0,0,0"/>

                        <Button x:Name="btnMoveDown"
                    TabIndex="22"
                    Click="OnClickMoveDown"
                    MouseRightButtonDown="OnClickSendBottom"
                    Style="{StaticResource SmallImageButton}"
                    Content="{StaticResource iconDownArrow}"
                    ToolTip="Move Down/Right-Click to Move to Bottom"/>

                        <Button x:Name="btnActivateAll" 
                    TabIndex="25"
                    Click="OnClickActivateAll"
                    MouseRightButtonDown="OnClickActivateAll"
                    Style="{StaticResource SmallImageButton}"
                    Content="{StaticResource iconCheckmark}"
                    ToolTip="Activate All Mods"
                    Margin="0,0,0,0"/>

                        <Button x:Name="btnDeactivateAll"
                    TabIndex="26"
                    Click="OnClickDeactivateAll"
                    MouseRightButtonDown="OnClickDeactivateAll"
                    Style="{StaticResource SmallImageButton}"
                    Content="{StaticResource iconCancel}"
                    ToolTip="Deactivate All Mods"
                    Margin="0,0,0,0"/>

                        <Button x:Name="btnUninstall" 
                    TabIndex="28"
                    Style="{StaticResource SmallImageButton}"
                    Content="{StaticResource iconDelete}"
                    Click="OnClickUninstall"
                    MouseRightButtonDown="OnClickUninstall"
                    ToolTip="Uninstall Mod(s)"
                    Margin="0,0,0,0"/>

                    </StackPanel>

                </Grid>
            </TabItem>
            <TabItem x:Name="tabCtrlCatalog">
                <TabItem.Header>
                    <TextBlock x:Name="tabCatalog"
                               Text="Browse Catalog"
                               Padding="0"/>
                </TabItem.Header>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>

                    <Rectangle Fill="#383838FF"/>

                    <!--ItemContainerStyle="{StaticResource ModListViewItem}"-->
                    <ListView x:Name="lstCatalogMods"
                  Background="Transparent"
                  ItemsSource="{Binding modListCatalog}"
                  ScrollViewer.HorizontalScrollBarVisibility="Auto"
                  ScrollViewer.CanContentScroll="False"
                  VirtualizingStackPanel.IsVirtualizing="False">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn x:Name="colCatalogName" Header="Name" Width="Auto" DisplayMemberBinding="{Binding Name}"/>
                                <GridViewColumn x:Name="colCatalogAuthor" Header="Author" Width="Auto" DisplayMemberBinding="{Binding Author}"/>
                                <!--<GridViewColumn x:Name="colCatalogReleaseDate" Header="Released" Width="90" DisplayMemberBinding="{Binding ReleaseDate}"/>-->
                                <GridViewColumn x:Name="colCatalogCategory" Header="Category" Width="100" DisplayMemberBinding="{Binding Category}"/>
                                <!--<GridViewColumn x:Name="colCatalogDownloadSize" Header="Size" Width="60" DisplayMemberBinding="{Binding DownloadSize}"/>-->
                                <GridViewColumn x:Name="colCatalogInstalled" Header="Installed" Width="50" DisplayMemberBinding="{Binding Installed}"/>
                            </GridView>
                        </ListView.View>
                    </ListView>

                    <StackPanel Grid.Column="1"
                    VerticalAlignment="Top"
                    HorizontalAlignment="Right">

                        <Button x:Name="btnDownload"
                    TabIndex="11"
                    Click="OnClickDownload"
                    MouseRightButtonDown="OnClickDownload"
                    ToolTip="Download Selected Mod(s)"
                    Style="{StaticResource SmallImageButton}"
                    Content="{StaticResource iconDownload}"/>

                    </StackPanel>

                    <ListView x:Name="lstDownloads" 
                  Grid.Row="1" 
                  Margin="0,5,0,0"
                  ItemsSource="{Binding downloadList, UpdateSourceTrigger=PropertyChanged}"
                  SelectedItem="{Binding SelectedDownload, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  ItemContainerStyle="{StaticResource DownloadListViewItem}"
                  MinHeight="100"
                  MaxHeight="150">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn x:Name="colDownloadName" Header="Mod" Width="200" DisplayMemberBinding="{Binding Name}"/>
                                <GridViewColumn x:Name="colDownloadProgress" Header="Progress" Width="100">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <ProgressBar Value="{Binding PercentComplete}" Width="100" Height="10" Opacity="1"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn x:Name="colDownloadSpeed" Header="Speed" Width="70" DisplayMemberBinding="{Binding DownloadSpeed}"/>
                                <GridViewColumn x:Name="colDownloadTimeLeft" Header="Time Left" Width="80" DisplayMemberBinding="{Binding RemainingTime}"/>

                            </GridView>
                        </ListView.View>
                    </ListView>

                    <StackPanel Grid.Row="1"
                    Grid.Column="1"
                    Margin="0,5,0,0"
                    VerticalAlignment="Top"
                    HorizontalAlignment="Right">

                        <Button x:Name="btnCancel"
                    TabIndex="14"
                    Click="OnClickCancel"
                    MouseRightButtonDown="OnClickCancelAll"
                    ToolTipService.ShowOnDisabled="True"
                    ToolTip="Cancel Current Download/Right-Click to Cancel All"
                    Style="{StaticResource SmallImageButton}"
                    Content="{StaticResource iconStop}"/>

                    </StackPanel>
                </Grid>
            </TabItem>
        </TabControl>

        <Popup x:Name="popupFilters"
               Placement="Bottom"
               HorizontalOffset="-140"
               PlacementTarget="{Binding ElementName=btnFilters}"
               StaysOpen="False" Grid.ColumnSpan="2" Margin="0,0,0,26">
            <Grid>
                <ListBox MinWidth="165"
                         FontSize="13"
                         MaxHeight="225"
                         ScrollViewer.CanContentScroll="False"
                         ItemsSource="{Binding AvailableFilters}"
                         ItemContainerStyle="{StaticResource CategoryFilterListBoxItem}"/>
            </Grid>
        </Popup>


        <StatusBar  Grid.Row="2" Grid.ColumnSpan="3" Margin="0,5,0,0" IsTabStop="False">
            <StatusBarItem x:Name="statusBarItem" Height="22" IsTabStop="False">
                <StatusBarItem.Style>
                    <Style TargetType="{x:Type StatusBarItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="StatusBarItem">
                                    <Border>
                                        <Grid>
                                            <Button x:Name="btnOpenAppLog" 
                                                    Height="{TemplateBinding Height}"
                                                    Cursor="Hand"
                                                    ToolTipService.InitialShowDelay="250"
                                                    IsTabStop="False"
                                                    Background="Transparent"/>


                                            <TextBlock x:Name="txtStatusMessage"
                                                       Text="{Binding StatusMessage, FallbackValue=''}"
                                                       IsHitTestVisible="False"
                                                       Padding="5,1,0,1"
                                                       TextTrimming="CharacterEllipsis"
                                                       VerticalAlignment="Center"
                                                       TextWrapping="Wrap"/>
                                        </Grid>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsFlashingStatus}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard x:Name="beginStory">
                                        <Storyboard AutoReverse="True" RepeatBehavior="Forever" SpeedRatio="8">
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                                             From="1" To="0.75" Duration="0:0:1" AutoReverse="True"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <StopStoryboard BeginStoryboardName="beginStory"/>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StatusBarItem.Style>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
